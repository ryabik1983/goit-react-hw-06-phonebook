{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","store/action.js","store/reducer.js","store/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","deleteContact","filterContacts","contactsReduser","createReducer","state","payload","name","number","newItem","id","nanoid","isUnique","some","el","console","log","alert","filter","filterReduser","_","combineReducers","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","app","persistReducer","appReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","value","className","styles","preventDefault","label","input","type","onChange","pattern","title","placeholder","required","submit","Filter","useSelector","dispatch","useDispatch","actions","target","ContactsList","items","toLowerCaseFilter","toLowerCase","includes","list","map","item","span","btn","onClick","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.cd585a0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2vaue\",\"item\":\"ContactList_item__Jwb7n\",\"btn\":\"ContactList_btn__3E5Ol\",\"span\":\"ContactList_span__3ctQq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3Qj6z\",\"input\":\"Filter_input__1Gy11\"};","import {createAction} from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('add');\r\nexport const deleteContact = createAction('delete');\r\nexport const filterContacts = createAction('filter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\nimport { addContact, deleteContact, filterContacts } from './action';\r\n\r\nconst contactsReduser = createReducer ([], {\r\n  [addContact]: (state, { payload }) => {\r\n    const {name, number} = payload;\r\n    const newItem = {\r\n      id: nanoid(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    let isUnique = state.some(el => el.name === name);\r\n    console.log(isUnique);\r\n    if (!isUnique) {\r\n      return [...state, newItem];\r\n    } else {\r\n      alert(`${name} is already in contacts`);\r\n    }\r\n    return;\r\n   },\r\n   [deleteContact]: (state, { payload }) => [\r\n     ...state.filter(el => el.id !== payload),\r\n   ], \r\n});\r\n\r\nconst filterReduser = createReducer ('', {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReduser,\r\n  filter: filterReduser,\r\n});","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport appReducer from './reducer';\r\nimport logger from 'redux-logger';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  app: persistReducer(persistConfig, appReducer),\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React, {useState} from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState (''); \r\n  const [number, setNumber] = useState ('')\r\n  \r\n  const handleChange = e => {\r\n   if (e.currentTarget.name === 'name') setName(e.currentTarget.value);\r\n   if (e.currentTarget.name === 'number') setNumber(e.currentTarget.value); \r\n  };\r\n  \r\n  const handleSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit({\r\n          name: name,\r\n          number: number,\r\n        });\r\n        setName('');\r\n        setNumber('');\r\n      };\r\n      return (\r\n              <form className={styles['contact_form']} onSubmit={handleSubmit}>\r\n                <label className={styles.label}>\r\n                  Name\r\n                  <input\r\n                    className={styles.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    onChange={handleChange}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                    placeholder=\"Ivan Dulin\"\r\n                    required\r\n                    value={name}\r\n                  />\r\n                </label>\r\n                <label className={styles.label}>\r\n                  Number\r\n                  <input\r\n                    className={styles.input}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    onChange={handleChange}   \r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                    placeholder=\"067-233-15-14\"\r\n                    required\r\n                    value={number}\r\n                  />\r\n                </label>\r\n                <button className={styles.submit} type=\"submit\">\r\n                  Add contact\r\n                </button>\r\n              </form>\r\n            );\r\n\r\n}\r\n\r\n\r\nexport default ContactForm;\r\n\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../store/action';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(state => state.app.filter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className={styles.filter}>\r\n      <label className={styles.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={e => {\r\n            dispatch(actions.filterContacts(e.target.value));\r\n          }}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './ContactList.module.css';\r\nimport * as actions from '../../store/action';\r\n\r\nconst ContactsList = () => {\r\n  const items = useSelector(({ app }) => {\r\n    const toLowerCaseFilter = app.filter.toLowerCase();\r\n    const items = app.contacts.filter(el =>\r\n      el.name.toLowerCase().includes(toLowerCaseFilter),\r\n    );\r\n    return items;\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={styles.list}>\r\n      {items.map(el => {\r\n        return (\r\n          <li className={styles.item} key={el.id}>\r\n            <span className={styles.span}>\r\n              {el.name}: {el.number}\r\n            </span>\r\n            <button\r\n              className={styles.btn}\r\n              type=\"button\"\r\n              id={el.id}\r\n              onClick={() => {\r\n                dispatch(actions.deleteContact(el.id));\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactsList from './components/ContactList/ContactList';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from './store/action';\r\nimport './App.css';\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\nconst dispatch = useDispatch()\r\n\r\nreturn (\r\n  \r\n<main className=\"main\">\r\n    <h1 className=\"title\">Phonebook</h1>\r\n    <ContactForm onSubmit={(name, number) => dispatch(actions.addContact(name, number))}\r\n    />\r\n    <h2 className=\"title\">Contacts</h2>\r\n    <Filter/>\r\n    <ContactsList/>\r\n  </main>\r\n)  \r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './store/store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n            <App />\r\n          </PersistGate>\r\n    </Provider>\r\n      </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"ContactForm_contact_form__2Gyh-\",\"label\":\"ContactForm_label__2afBv\",\"input\":\"ContactForm_input__heUVl\",\"submit\":\"ContactForm_submit__3ZW1F\"};"],"sourceRoot":""}